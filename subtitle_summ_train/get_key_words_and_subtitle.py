"""The application reads the xml file generated by subtitle_scraper/yify_subtitle_scrape.py
and downloads the subtitle zip file into destination folder and also extracts the key words
from imdb link and enhances the input xml with keywords

Input: xml file
Output: subtitle zip AND xml file with keywords

"""

import imdb_keywords.imdb_keywords as kwords 
from lxml import etree
import requests


def create_xml_with_keywords(xml_file, destination_xml_file):
    root = etree.parse(xml_file).getroot()
    imdb_url = root.find('ImdbUrl').text
    keywords = kwords.imdb_key_words(imdb_url)
    _xml_keywords = etree.SubElement(root, "AllKeywords")
    for kw, v in keywords:
        #next_kw = etree.Element('keyword')
        next_kw = etree.SubElement(_xml_keywords, "keyword")
        next_kw.attrib['vote'] = str(v)
        next_kw.text = kw
        _xml_keywords.append(next_kw)

    et = etree.ElementTree(root)
    et.write(destination_xml_file, xml_declaration=True, pretty_print=True)

    return root


def download_sub(xml_file, output_subtitle_file):
    root = etree.parse(xml_file).getroot()
    subtitle_url = root.find('SubtitleUrl').text
    r = requests.get(subtitle_url)  
    with open(output_subtitle_file, 'wb') as f:
        f.write(r.content)


if __name__ == "__main__":
    import argparse
    import os

    parser = argparse.ArgumentParser(description='Download subtitle and enhance xml')

    parser.add_argument('--xml', required=True, help='INput XML file', type=str)
    parser.add_argument('--out_xml_dir', help='Output XML directory', type=str)
    parser.add_argument('--out_sub_dir', help='Output subtitle directory', type=str)
    options = parser.parse_args()

    output_file = os.path.join(options.out_xml_dir, os.path.basename(options.xml))
    if not os.path.exists(output_file):
        create_xml_with_keywords(options.xml, output_file)

    dest_zip = os.path.splitext(os.path.basename(options.xml))[0] + ".zip"
    output_subtitle_file = os.path.join(options.out_sub_dir, dest_zip)

    if not os.path.exists(output_subtitle_file):
        download_sub(options.xml, output_subtitle_file)

